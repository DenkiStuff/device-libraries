# 1 "../lib/Adafruit_ILI9341/Adafruit_ILI9341.cpp"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "../lib/Adafruit_ILI9341/Adafruit_ILI9341.cpp"
# 49 "../lib/Adafruit_ILI9341/Adafruit_ILI9341.cpp"
# 1 "../lib/Adafruit_ILI9341/Adafruit_ILI9341.h" 1
# 40 "../lib/Adafruit_ILI9341/Adafruit_ILI9341.h"
# 1 "/opt/arduino-1.8.5/hardware/arduino/avr/cores/arduino/Arduino.h" 1
# 23 "/opt/arduino-1.8.5/hardware/arduino/avr/cores/arduino/Arduino.h"
# 1 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/stdlib.h" 1 3
# 48 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/stdlib.h" 3
# 1 "/opt/arduino-1.8.5/hardware/tools/avr/lib/gcc/avr/4.9.2/include/stddef.h" 1 3 4
# 212 "/opt/arduino-1.8.5/hardware/tools/avr/lib/gcc/avr/4.9.2/include/stddef.h" 3 4
typedef unsigned int size_t;
# 49 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/stdlib.h" 2 3







extern "C" {
# 70 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/stdlib.h" 3
typedef struct {
 int quot;
 int rem;
} div_t;


typedef struct {
 long quot;
 long rem;
} ldiv_t;


typedef int (*__compar_fn_t)(const void *, const void *);
# 116 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/stdlib.h" 3
extern void abort(void) __attribute__((__noreturn__));




extern int abs(int __i) __attribute__((__const__));
# 130 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/stdlib.h" 3
extern long labs(long __i) __attribute__((__const__));
# 153 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/stdlib.h" 3
extern void *bsearch(const void *__key, const void *__base, size_t __nmemb,
       size_t __size, int (*__compar)(const void *, const void *));







extern div_t div(int __num, int __denom) __asm__("__divmodhi4") __attribute__((__const__));





extern ldiv_t ldiv(long __num, long __denom) __asm__("__divmodsi4") __attribute__((__const__));
# 185 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/stdlib.h" 3
extern void qsort(void *__base, size_t __nmemb, size_t __size,
    __compar_fn_t __compar);
# 218 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/stdlib.h" 3
extern long strtol(const char *__nptr, char **__endptr, int __base);
# 252 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/stdlib.h" 3
extern unsigned long strtoul(const char *__nptr, char **__endptr, int __base);
# 264 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/stdlib.h" 3
extern long atol(const char *__s) __attribute__((__pure__));
# 276 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/stdlib.h" 3
extern int atoi(const char *__s) __attribute__((__pure__));
# 288 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/stdlib.h" 3
extern void exit(int __status) __attribute__((__noreturn__));
# 300 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/stdlib.h" 3
extern void *malloc(size_t __size) __attribute__((__malloc__));






extern void free(void *__ptr);




extern size_t __malloc_margin;




extern char *__malloc_heap_start;




extern char *__malloc_heap_end;






extern void *calloc(size_t __nele, size_t __size) __attribute__((__malloc__));
# 348 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/stdlib.h" 3
extern void *realloc(void *__ptr, size_t __size) __attribute__((__malloc__));

extern double strtod(const char *__nptr, char **__endptr);
# 361 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/stdlib.h" 3
extern double atof(const char *__nptr);
# 383 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/stdlib.h" 3
extern int rand(void);



extern void srand(unsigned int __seed);






extern int rand_r(unsigned long *__ctx);
# 428 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/stdlib.h" 3
extern __inline__ __attribute__((__gnu_inline__))
char *itoa (int __val, char *__s, int __radix)
{
    if (!__builtin_constant_p (__radix)) {
 extern char *__itoa (int, char *, int);
 return __itoa (__val, __s, __radix);
    } else if (__radix < 2 || __radix > 36) {
 *__s = 0;
 return __s;
    } else {
 extern char *__itoa_ncheck (int, char *, unsigned char);
 return __itoa_ncheck (__val, __s, __radix);
    }
}
# 473 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/stdlib.h" 3
extern __inline__ __attribute__((__gnu_inline__))
char *ltoa (long __val, char *__s, int __radix)
{
    if (!__builtin_constant_p (__radix)) {
 extern char *__ltoa (long, char *, int);
 return __ltoa (__val, __s, __radix);
    } else if (__radix < 2 || __radix > 36) {
 *__s = 0;
 return __s;
    } else {
 extern char *__ltoa_ncheck (long, char *, unsigned char);
 return __ltoa_ncheck (__val, __s, __radix);
    }
}
# 516 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/stdlib.h" 3
extern __inline__ __attribute__((__gnu_inline__))
char *utoa (unsigned int __val, char *__s, int __radix)
{
    if (!__builtin_constant_p (__radix)) {
 extern char *__utoa (unsigned int, char *, int);
 return __utoa (__val, __s, __radix);
    } else if (__radix < 2 || __radix > 36) {
 *__s = 0;
 return __s;
    } else {
 extern char *__utoa_ncheck (unsigned int, char *, unsigned char);
 return __utoa_ncheck (__val, __s, __radix);
    }
}
# 558 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/stdlib.h" 3
extern __inline__ __attribute__((__gnu_inline__))
char *ultoa (unsigned long __val, char *__s, int __radix)
{
    if (!__builtin_constant_p (__radix)) {
 extern char *__ultoa (unsigned long, char *, int);
 return __ultoa (__val, __s, __radix);
    } else if (__radix < 2 || __radix > 36) {
 *__s = 0;
 return __s;
    } else {
 extern char *__ultoa_ncheck (unsigned long, char *, unsigned char);
 return __ultoa_ncheck (__val, __s, __radix);
    }
}
# 590 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/stdlib.h" 3
extern long random(void);




extern void srandom(unsigned long __seed);







extern long random_r(unsigned long *__ctx);
# 649 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/stdlib.h" 3
extern char *dtostre(double __val, char *__s, unsigned char __prec,
       unsigned char __flags);
# 666 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/stdlib.h" 3
extern char *dtostrf(double __val, signed char __width,
                     unsigned char __prec, char *__s);
# 685 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/stdlib.h" 3
extern int atexit(void (*)(void));
extern int system (const char *);
extern char *getenv (const char *);



}
# 24 "/opt/arduino-1.8.5/hardware/arduino/avr/cores/arduino/Arduino.h" 2
# 1 "/opt/arduino-1.8.5/hardware/tools/avr/lib/gcc/avr/4.9.2/include/stdbool.h" 1 3 4
# 25 "/opt/arduino-1.8.5/hardware/arduino/avr/cores/arduino/Arduino.h" 2
# 1 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/string.h" 1 3
# 46 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/string.h" 3
# 1 "/opt/arduino-1.8.5/hardware/tools/avr/lib/gcc/avr/4.9.2/include/stddef.h" 1 3 4
# 47 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/string.h" 2 3
# 58 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/string.h" 3
extern "C" {
# 125 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/string.h" 3
extern int ffs(int __val) __attribute__((__const__));





extern int ffsl(long __val) __attribute__((__const__));





__extension__ extern int ffsll(long long __val) __attribute__((__const__));
# 150 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/string.h" 3
extern void *memccpy(void *, const void *, int, size_t);
# 162 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/string.h" 3
extern void *memchr(const void *, int, size_t) __attribute__((__pure__));
# 180 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/string.h" 3
extern int memcmp(const void *, const void *, size_t) __attribute__((__pure__));
# 191 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/string.h" 3
extern void *memcpy(void *, const void *, size_t);
# 203 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/string.h" 3
extern void *memmem(const void *, size_t, const void *, size_t) __attribute__((__pure__));
# 213 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/string.h" 3
extern void *memmove(void *, const void *, size_t);
# 225 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/string.h" 3
extern void *memrchr(const void *, int, size_t) __attribute__((__pure__));
# 235 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/string.h" 3
extern void *memset(void *, int, size_t);
# 248 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/string.h" 3
extern char *strcat(char *, const char *);
# 262 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/string.h" 3
extern char *strchr(const char *, int) __attribute__((__pure__));
# 274 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/string.h" 3
extern char *strchrnul(const char *, int) __attribute__((__pure__));
# 287 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/string.h" 3
extern int strcmp(const char *, const char *) __attribute__((__pure__));
# 305 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/string.h" 3
extern char *strcpy(char *, const char *);
# 320 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/string.h" 3
extern int strcasecmp(const char *, const char *) __attribute__((__pure__));
# 333 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/string.h" 3
extern char *strcasestr(const char *, const char *) __attribute__((__pure__));
# 344 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/string.h" 3
extern size_t strcspn(const char *__s, const char *__reject) __attribute__((__pure__));
# 364 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/string.h" 3
extern char *strdup(const char *s1);
# 377 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/string.h" 3
extern size_t strlcat(char *, const char *, size_t);
# 388 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/string.h" 3
extern size_t strlcpy(char *, const char *, size_t);
# 399 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/string.h" 3
extern size_t strlen(const char *) __attribute__((__pure__));
# 411 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/string.h" 3
extern char *strlwr(char *);
# 422 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/string.h" 3
extern char *strncat(char *, const char *, size_t);
# 434 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/string.h" 3
extern int strncmp(const char *, const char *, size_t) __attribute__((__pure__));
# 449 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/string.h" 3
extern char *strncpy(char *, const char *, size_t);
# 464 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/string.h" 3
extern int strncasecmp(const char *, const char *, size_t) __attribute__((__pure__));
# 478 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/string.h" 3
extern size_t strnlen(const char *, size_t) __attribute__((__pure__));
# 491 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/string.h" 3
extern char *strpbrk(const char *__s, const char *__accept) __attribute__((__pure__));
# 505 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/string.h" 3
extern char *strrchr(const char *, int) __attribute__((__pure__));
# 515 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/string.h" 3
extern char *strrev(char *);
# 533 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/string.h" 3
extern char *strsep(char **, const char *);
# 544 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/string.h" 3
extern size_t strspn(const char *__s, const char *__accept) __attribute__((__pure__));
# 557 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/string.h" 3
extern char *strstr(const char *, const char *) __attribute__((__pure__));
# 576 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/string.h" 3
extern char *strtok(char *, const char *);
# 593 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/string.h" 3
extern char *strtok_r(char *, const char *, char **);
# 606 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/string.h" 3
extern char *strupr(char *);



extern int strcoll(const char *s1, const char *s2);
extern char *strerror(int errnum);
extern size_t strxfrm(char *dest, const char *src, size_t n);



}
# 26 "/opt/arduino-1.8.5/hardware/arduino/avr/cores/arduino/Arduino.h" 2
# 1 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/math.h" 1 3
# 121 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/math.h" 3
extern "C" {





extern double cos(double __x) __attribute__((__const__));





extern double sin(double __x) __attribute__((__const__));





extern double tan(double __x) __attribute__((__const__));






extern double fabs(double __x) __attribute__((__const__));






extern double fmod(double __x, double __y) __attribute__((__const__));
# 168 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/math.h" 3
extern double modf(double __x, double *__iptr);


extern float modff (float __x, float *__iptr);




extern double sqrt(double __x) __attribute__((__const__));


extern float sqrtf (float) __attribute__((__const__));




extern double cbrt(double __x) __attribute__((__const__));
# 195 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/math.h" 3
extern double hypot (double __x, double __y) __attribute__((__const__));







extern double square(double __x) __attribute__((__const__));






extern double floor(double __x) __attribute__((__const__));






extern double ceil(double __x) __attribute__((__const__));
# 235 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/math.h" 3
extern double frexp(double __x, int *__pexp);







extern double ldexp(double __x, int __exp) __attribute__((__const__));





extern double exp(double __x) __attribute__((__const__));





extern double cosh(double __x) __attribute__((__const__));





extern double sinh(double __x) __attribute__((__const__));





extern double tanh(double __x) __attribute__((__const__));







extern double acos(double __x) __attribute__((__const__));







extern double asin(double __x) __attribute__((__const__));






extern double atan(double __x) __attribute__((__const__));
# 299 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/math.h" 3
extern double atan2(double __y, double __x) __attribute__((__const__));





extern double log(double __x) __attribute__((__const__));





extern double log10(double __x) __attribute__((__const__));





extern double pow(double __x, double __y) __attribute__((__const__));






extern int isnan(double __x) __attribute__((__const__));
# 334 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/math.h" 3
extern int isinf(double __x) __attribute__((__const__));






__attribute__((__const__)) static inline int isfinite (double __x)
{
    unsigned char __exp;
    __asm__ (
 "mov	%0, %C1		\n\t"
 "lsl	%0		\n\t"
 "mov	%0, %D1		\n\t"
 "rol	%0		"
 : "=r" (__exp)
 : "r" (__x) );
    return __exp != 0xff;
}






__attribute__((__const__)) static inline double copysign (double __x, double __y)
{
    __asm__ (
 "bst	%D2, 7	\n\t"
 "bld	%D0, 7	"
 : "=r" (__x)
 : "0" (__x), "r" (__y) );
    return __x;
}
# 377 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/math.h" 3
extern int signbit (double __x) __attribute__((__const__));






extern double fdim (double __x, double __y) __attribute__((__const__));
# 393 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/math.h" 3
extern double fma (double __x, double __y, double __z) __attribute__((__const__));







extern double fmax (double __x, double __y) __attribute__((__const__));







extern double fmin (double __x, double __y) __attribute__((__const__));






extern double trunc (double __x) __attribute__((__const__));
# 427 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/math.h" 3
extern double round (double __x) __attribute__((__const__));
# 440 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/math.h" 3
extern long lround (double __x) __attribute__((__const__));
# 454 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/math.h" 3
extern long lrint (double __x) __attribute__((__const__));



}
# 27 "/opt/arduino-1.8.5/hardware/arduino/avr/cores/arduino/Arduino.h" 2

# 1 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/pgmspace.h" 1 3
# 88 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/pgmspace.h" 3
# 1 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/inttypes.h" 1 3
# 37 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/inttypes.h" 3
# 1 "/opt/arduino-1.8.5/hardware/tools/avr/lib/gcc/avr/4.9.2/include/stdint.h" 1 3 4
# 9 "/opt/arduino-1.8.5/hardware/tools/avr/lib/gcc/avr/4.9.2/include/stdint.h" 3 4
# 1 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/stdint.h" 1 3 4
# 125 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/stdint.h" 3 4
typedef signed int int8_t __attribute__((__mode__(__QI__)));
typedef unsigned int uint8_t __attribute__((__mode__(__QI__)));
typedef signed int int16_t __attribute__ ((__mode__ (__HI__)));
typedef unsigned int uint16_t __attribute__ ((__mode__ (__HI__)));
typedef signed int int32_t __attribute__ ((__mode__ (__SI__)));
typedef unsigned int uint32_t __attribute__ ((__mode__ (__SI__)));

typedef signed int int64_t __attribute__((__mode__(__DI__)));
typedef unsigned int uint64_t __attribute__((__mode__(__DI__)));
# 146 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/stdint.h" 3 4
typedef int16_t intptr_t;




typedef uint16_t uintptr_t;
# 163 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/stdint.h" 3 4
typedef int8_t int_least8_t;




typedef uint8_t uint_least8_t;




typedef int16_t int_least16_t;




typedef uint16_t uint_least16_t;




typedef int32_t int_least32_t;




typedef uint32_t uint_least32_t;







typedef int64_t int_least64_t;






typedef uint64_t uint_least64_t;
# 217 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/stdint.h" 3 4
typedef int8_t int_fast8_t;




typedef uint8_t uint_fast8_t;




typedef int16_t int_fast16_t;




typedef uint16_t uint_fast16_t;




typedef int32_t int_fast32_t;




typedef uint32_t uint_fast32_t;







typedef int64_t int_fast64_t;






typedef uint64_t uint_fast64_t;
# 277 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/stdint.h" 3 4
typedef int64_t intmax_t;




typedef uint64_t uintmax_t;
# 10 "/opt/arduino-1.8.5/hardware/tools/avr/lib/gcc/avr/4.9.2/include/stdint.h" 2 3 4
# 38 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/inttypes.h" 2 3
# 77 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/inttypes.h" 3
typedef int32_t int_farptr_t;



typedef uint32_t uint_farptr_t;
# 89 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/pgmspace.h" 2 3
# 1 "/opt/arduino-1.8.5/hardware/tools/avr/lib/gcc/avr/4.9.2/include/stddef.h" 1 3 4
# 90 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/pgmspace.h" 2 3
# 1 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/io.h" 1 3
# 99 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/io.h" 3
# 1 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/sfr_defs.h" 1 3
# 100 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/io.h" 2 3
# 272 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/io.h" 3
# 1 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/iom328p.h" 1 3
# 273 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/io.h" 2 3
# 627 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/io.h" 3
# 1 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/portpins.h" 1 3
# 628 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/io.h" 2 3

# 1 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/common.h" 1 3
# 630 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/io.h" 2 3

# 1 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/version.h" 1 3
# 632 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/io.h" 2 3






# 1 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/fuse.h" 1 3
# 239 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/fuse.h" 3
typedef struct
{
    unsigned char low;
    unsigned char high;
    unsigned char extended;
} __fuse_t;
# 639 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/io.h" 2 3


# 1 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/lock.h" 1 3
# 642 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/io.h" 2 3
# 91 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/pgmspace.h" 2 3
# 116 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/pgmspace.h" 3
extern "C" {
# 353 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/pgmspace.h" 3
typedef void prog_void __attribute__((__progmem__,deprecated("prog_void type is deprecated.")));
typedef char prog_char __attribute__((__progmem__,deprecated("prog_char type is deprecated.")));
typedef unsigned char prog_uchar __attribute__((__progmem__,deprecated("prog_uchar type is deprecated.")));
typedef int8_t prog_int8_t __attribute__((__progmem__,deprecated("prog_int8_t type is deprecated.")));
typedef uint8_t prog_uint8_t __attribute__((__progmem__,deprecated("prog_uint8_t type is deprecated.")));
typedef int16_t prog_int16_t __attribute__((__progmem__,deprecated("prog_int16_t type is deprecated.")));
typedef uint16_t prog_uint16_t __attribute__((__progmem__,deprecated("prog_uint16_t type is deprecated.")));
typedef int32_t prog_int32_t __attribute__((__progmem__,deprecated("prog_int32_t type is deprecated.")));
typedef uint32_t prog_uint32_t __attribute__((__progmem__,deprecated("prog_uint32_t type is deprecated.")));

typedef int64_t prog_int64_t __attribute__((__progmem__,deprecated("prog_int64_t type is deprecated.")));
typedef uint64_t prog_uint64_t __attribute__((__progmem__,deprecated("prog_uint64_t type is deprecated.")));
# 1158 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/pgmspace.h" 3
extern const void * memchr_P(const void *, int __val, size_t __len) __attribute__((__const__));
# 1172 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/pgmspace.h" 3
extern int memcmp_P(const void *, const void *, size_t) __attribute__((__pure__));






extern void *memccpy_P(void *, const void *, int __val, size_t);
# 1188 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/pgmspace.h" 3
extern void *memcpy_P(void *, const void *, size_t);






extern void *memmem_P(const void *, size_t, const void *, size_t) __attribute__((__pure__));
# 1207 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/pgmspace.h" 3
extern const void * memrchr_P(const void *, int __val, size_t __len) __attribute__((__const__));
# 1217 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/pgmspace.h" 3
extern char *strcat_P(char *, const char *);
# 1233 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/pgmspace.h" 3
extern const char * strchr_P(const char *, int __val) __attribute__((__const__));
# 1245 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/pgmspace.h" 3
extern const char * strchrnul_P(const char *, int __val) __attribute__((__const__));
# 1258 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/pgmspace.h" 3
extern int strcmp_P(const char *, const char *) __attribute__((__pure__));
# 1268 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/pgmspace.h" 3
extern char *strcpy_P(char *, const char *);
# 1285 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/pgmspace.h" 3
extern int strcasecmp_P(const char *, const char *) __attribute__((__pure__));






extern char *strcasestr_P(const char *, const char *) __attribute__((__pure__));
# 1305 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/pgmspace.h" 3
extern size_t strcspn_P(const char *__s, const char * __reject) __attribute__((__pure__));
# 1321 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/pgmspace.h" 3
extern size_t strlcat_P (char *, const char *, size_t );
# 1334 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/pgmspace.h" 3
extern size_t strlcpy_P (char *, const char *, size_t );
# 1346 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/pgmspace.h" 3
extern size_t strnlen_P(const char *, size_t) __attribute__((__const__));
# 1357 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/pgmspace.h" 3
extern int strncmp_P(const char *, const char *, size_t) __attribute__((__pure__));
# 1376 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/pgmspace.h" 3
extern int strncasecmp_P(const char *, const char *, size_t) __attribute__((__pure__));
# 1387 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/pgmspace.h" 3
extern char *strncat_P(char *, const char *, size_t);
# 1401 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/pgmspace.h" 3
extern char *strncpy_P(char *, const char *, size_t);
# 1416 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/pgmspace.h" 3
extern char *strpbrk_P(const char *__s, const char * __accept) __attribute__((__pure__));
# 1427 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/pgmspace.h" 3
extern const char * strrchr_P(const char *, int __val) __attribute__((__const__));
# 1447 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/pgmspace.h" 3
extern char *strsep_P(char **__sp, const char * __delim);
# 1460 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/pgmspace.h" 3
extern size_t strspn_P(const char *__s, const char * __accept) __attribute__((__pure__));
# 1474 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/pgmspace.h" 3
extern char *strstr_P(const char *, const char *) __attribute__((__pure__));
# 1496 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/pgmspace.h" 3
extern char *strtok_P(char *__s, const char * __delim);
# 1516 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/pgmspace.h" 3
extern char *strtok_rP(char *__s, const char * __delim, char **__last);
# 1529 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/pgmspace.h" 3
extern size_t strlen_PF(uint_farptr_t src) __attribute__((__const__));
# 1545 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/pgmspace.h" 3
extern size_t strnlen_PF(uint_farptr_t src, size_t len) __attribute__((__const__));
# 1560 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/pgmspace.h" 3
extern void *memcpy_PF(void *dest, uint_farptr_t src, size_t len);
# 1575 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/pgmspace.h" 3
extern char *strcpy_PF(char *dest, uint_farptr_t src);
# 1595 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/pgmspace.h" 3
extern char *strncpy_PF(char *dest, uint_farptr_t src, size_t len);
# 1611 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/pgmspace.h" 3
extern char *strcat_PF(char *dest, uint_farptr_t src);
# 1632 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/pgmspace.h" 3
extern size_t strlcat_PF(char *dst, uint_farptr_t src, size_t siz);
# 1649 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/pgmspace.h" 3
extern char *strncat_PF(char *dest, uint_farptr_t src, size_t len);
# 1665 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/pgmspace.h" 3
extern int strcmp_PF(const char *s1, uint_farptr_t s2) __attribute__((__pure__));
# 1682 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/pgmspace.h" 3
extern int strncmp_PF(const char *s1, uint_farptr_t s2, size_t n) __attribute__((__pure__));
# 1698 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/pgmspace.h" 3
extern int strcasecmp_PF(const char *s1, uint_farptr_t s2) __attribute__((__pure__));
# 1716 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/pgmspace.h" 3
extern int strncasecmp_PF(const char *s1, uint_farptr_t s2, size_t n) __attribute__((__pure__));
# 1732 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/pgmspace.h" 3
extern char *strstr_PF(const char *s1, uint_farptr_t s2);
# 1744 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/pgmspace.h" 3
extern size_t strlcpy_PF(char *dst, uint_farptr_t src, size_t siz);
# 1760 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/pgmspace.h" 3
extern int memcmp_PF(const void *, uint_farptr_t, size_t) __attribute__((__pure__));
# 1779 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/pgmspace.h" 3
extern size_t __strlen_P(const char *) __attribute__((__const__));
__attribute__((__always_inline__)) static __inline__ size_t strlen_P(const char * s);
static __inline__ size_t strlen_P(const char *s) {
  return __builtin_constant_p(__builtin_strlen(s))
     ? __builtin_strlen(s) : __strlen_P(s);
}



}
# 29 "/opt/arduino-1.8.5/hardware/arduino/avr/cores/arduino/Arduino.h" 2

# 1 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/interrupt.h" 1 3
# 31 "/opt/arduino-1.8.5/hardware/arduino/avr/cores/arduino/Arduino.h" 2

# 1 "/opt/arduino-1.8.5/hardware/arduino/avr/cores/arduino/binary.h" 1
# 33 "/opt/arduino-1.8.5/hardware/arduino/avr/cores/arduino/Arduino.h" 2


extern "C"{


void yield(void);
# 121 "/opt/arduino-1.8.5/hardware/arduino/avr/cores/arduino/Arduino.h"
typedef unsigned int word;



typedef bool boolean;
typedef uint8_t byte;

void init(void);
void initVariant(void);

int atexit(void (*func)()) __attribute__((weak));

void pinMode(uint8_t, uint8_t);
void digitalWrite(uint8_t, uint8_t);
int digitalRead(uint8_t);
int analogRead(uint8_t);
void analogReference(uint8_t mode);
void analogWrite(uint8_t, int);

unsigned long millis(void);
unsigned long micros(void);
void delay(unsigned long);
void delayMicroseconds(unsigned int us);
unsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout);
unsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout);

void shiftOut(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder, uint8_t val);
uint8_t shiftIn(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder);

void attachInterrupt(uint8_t, void (*)(void), int mode);
void detachInterrupt(uint8_t);

void setup(void);
void loop(void);
# 163 "/opt/arduino-1.8.5/hardware/arduino/avr/cores/arduino/Arduino.h"
extern const uint16_t __attribute__((__progmem__)) port_to_mode_PGM[];
extern const uint16_t __attribute__((__progmem__)) port_to_input_PGM[];
extern const uint16_t __attribute__((__progmem__)) port_to_output_PGM[];

extern const uint8_t __attribute__((__progmem__)) digital_pin_to_port_PGM[];

extern const uint8_t __attribute__((__progmem__)) digital_pin_to_bit_mask_PGM[];
extern const uint8_t __attribute__((__progmem__)) digital_pin_to_timer_PGM[];
# 226 "/opt/arduino-1.8.5/hardware/arduino/avr/cores/arduino/Arduino.h"
}



# 1 "/opt/arduino-1.8.5/hardware/arduino/avr/cores/arduino/WCharacter.h" 1
# 23 "/opt/arduino-1.8.5/hardware/arduino/avr/cores/arduino/WCharacter.h"
# 1 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/ctype.h" 1 3
# 48 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/ctype.h" 3
extern "C" {
# 74 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/ctype.h" 3
extern int isalnum(int __c) __attribute__((__const__));






extern int isalpha(int __c) __attribute__((__const__));






extern int isascii(int __c) __attribute__((__const__));





extern int isblank(int __c) __attribute__((__const__));





extern int iscntrl(int __c) __attribute__((__const__));





extern int isdigit(int __c) __attribute__((__const__));





extern int isgraph(int __c) __attribute__((__const__));





extern int islower(int __c) __attribute__((__const__));





extern int isprint(int __c) __attribute__((__const__));






extern int ispunct(int __c) __attribute__((__const__));







extern int isspace(int __c) __attribute__((__const__));





extern int isupper(int __c) __attribute__((__const__));






extern int isxdigit(int __c) __attribute__((__const__));
# 173 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/ctype.h" 3
extern int toascii(int __c) __attribute__((__const__));





extern int tolower(int __c) __attribute__((__const__));





extern int toupper(int __c) __attribute__((__const__));




}
# 24 "/opt/arduino-1.8.5/hardware/arduino/avr/cores/arduino/WCharacter.h" 2


inline boolean isAlphaNumeric(int c) __attribute__((always_inline));
inline boolean isAlpha(int c) __attribute__((always_inline));
inline boolean isAscii(int c) __attribute__((always_inline));
inline boolean isWhitespace(int c) __attribute__((always_inline));
inline boolean isControl(int c) __attribute__((always_inline));
inline boolean isDigit(int c) __attribute__((always_inline));
inline boolean isGraph(int c) __attribute__((always_inline));
inline boolean isLowerCase(int c) __attribute__((always_inline));
inline boolean isPrintable(int c) __attribute__((always_inline));
inline boolean isPunct(int c) __attribute__((always_inline));
inline boolean isSpace(int c) __attribute__((always_inline));
inline boolean isUpperCase(int c) __attribute__((always_inline));
inline boolean isHexadecimalDigit(int c) __attribute__((always_inline));
inline int toAscii(int c) __attribute__((always_inline));
inline int toLowerCase(int c) __attribute__((always_inline));
inline int toUpperCase(int c)__attribute__((always_inline));




inline boolean isAlphaNumeric(int c)
{
  return ( isalnum(c) == 0 ? false : true);
}




inline boolean isAlpha(int c)
{
  return ( isalpha(c) == 0 ? false : true);
}




inline boolean isAscii(int c)
{
  return ( isascii (c) == 0 ? false : true);
}



inline boolean isWhitespace(int c)
{
  return ( isblank (c) == 0 ? false : true);
}



inline boolean isControl(int c)
{
  return ( iscntrl (c) == 0 ? false : true);
}



inline boolean isDigit(int c)
{
  return ( isdigit (c) == 0 ? false : true);
}



inline boolean isGraph(int c)
{
  return ( isgraph (c) == 0 ? false : true);
}



inline boolean isLowerCase(int c)
{
  return (islower (c) == 0 ? false : true);
}



inline boolean isPrintable(int c)
{
  return ( isprint (c) == 0 ? false : true);
}




inline boolean isPunct(int c)
{
  return ( ispunct (c) == 0 ? false : true);
}





inline boolean isSpace(int c)
{
  return ( isspace (c) == 0 ? false : true);
}



inline boolean isUpperCase(int c)
{
  return ( isupper (c) == 0 ? false : true);
}




inline boolean isHexadecimalDigit(int c)
{
  return ( isxdigit (c) == 0 ? false : true);
}




inline int toAscii(int c)
{
  return toascii (c);
}
# 156 "/opt/arduino-1.8.5/hardware/arduino/avr/cores/arduino/WCharacter.h"
inline int toLowerCase(int c)
{
  return tolower (c);
}



inline int toUpperCase(int c)
{
  return toupper (c);
}
# 231 "/opt/arduino-1.8.5/hardware/arduino/avr/cores/arduino/Arduino.h" 2
# 1 "/opt/arduino-1.8.5/hardware/arduino/avr/cores/arduino/WString.h" 1
# 37 "/opt/arduino-1.8.5/hardware/arduino/avr/cores/arduino/WString.h"
class __FlashStringHelper;




class StringSumHelper;


class String
{



 typedef void (String::*StringIfHelperType)() const;
 void StringIfHelper() const {}

public:





 String(const char *cstr = "");
 String(const String &str);
 String(const __FlashStringHelper *str);

 String(String &&rval);
 String(StringSumHelper &&rval);

 explicit String(char c);
 explicit String(unsigned char, unsigned char base=10);
 explicit String(int, unsigned char base=10);
 explicit String(unsigned int, unsigned char base=10);
 explicit String(long, unsigned char base=10);
 explicit String(unsigned long, unsigned char base=10);
 explicit String(float, unsigned char decimalPlaces=2);
 explicit String(double, unsigned char decimalPlaces=2);
 ~String(void);





 unsigned char reserve(unsigned int size);
 inline unsigned int length(void) const {return len;}




 String & operator = (const String &rhs);
 String & operator = (const char *cstr);
 String & operator = (const __FlashStringHelper *str);

 String & operator = (String &&rval);
 String & operator = (StringSumHelper &&rval);







 unsigned char concat(const String &str);
 unsigned char concat(const char *cstr);
 unsigned char concat(char c);
 unsigned char concat(unsigned char c);
 unsigned char concat(int num);
 unsigned char concat(unsigned int num);
 unsigned char concat(long num);
 unsigned char concat(unsigned long num);
 unsigned char concat(float num);
 unsigned char concat(double num);
 unsigned char concat(const __FlashStringHelper * str);



 String & operator += (const String &rhs) {concat(rhs); return (*this);}
 String & operator += (const char *cstr) {concat(cstr); return (*this);}
 String & operator += (char c) {concat(c); return (*this);}
 String & operator += (unsigned char num) {concat(num); return (*this);}
 String & operator += (int num) {concat(num); return (*this);}
 String & operator += (unsigned int num) {concat(num); return (*this);}
 String & operator += (long num) {concat(num); return (*this);}
 String & operator += (unsigned long num) {concat(num); return (*this);}
 String & operator += (float num) {concat(num); return (*this);}
 String & operator += (double num) {concat(num); return (*this);}
 String & operator += (const __FlashStringHelper *str){concat(str); return (*this);}

 friend StringSumHelper & operator + (const StringSumHelper &lhs, const String &rhs);
 friend StringSumHelper & operator + (const StringSumHelper &lhs, const char *cstr);
 friend StringSumHelper & operator + (const StringSumHelper &lhs, char c);
 friend StringSumHelper & operator + (const StringSumHelper &lhs, unsigned char num);
 friend StringSumHelper & operator + (const StringSumHelper &lhs, int num);
 friend StringSumHelper & operator + (const StringSumHelper &lhs, unsigned int num);
 friend StringSumHelper & operator + (const StringSumHelper &lhs, long num);
 friend StringSumHelper & operator + (const StringSumHelper &lhs, unsigned long num);
 friend StringSumHelper & operator + (const StringSumHelper &lhs, float num);
 friend StringSumHelper & operator + (const StringSumHelper &lhs, double num);
 friend StringSumHelper & operator + (const StringSumHelper &lhs, const __FlashStringHelper *rhs);


 operator StringIfHelperType() const { return buffer ? &String::StringIfHelper : 0; }
 int compareTo(const String &s) const;
 unsigned char equals(const String &s) const;
 unsigned char equals(const char *cstr) const;
 unsigned char operator == (const String &rhs) const {return equals(rhs);}
 unsigned char operator == (const char *cstr) const {return equals(cstr);}
 unsigned char operator != (const String &rhs) const {return !equals(rhs);}
 unsigned char operator != (const char *cstr) const {return !equals(cstr);}
 unsigned char operator < (const String &rhs) const;
 unsigned char operator > (const String &rhs) const;
 unsigned char operator <= (const String &rhs) const;
 unsigned char operator >= (const String &rhs) const;
 unsigned char equalsIgnoreCase(const String &s) const;
 unsigned char startsWith( const String &prefix) const;
 unsigned char startsWith(const String &prefix, unsigned int offset) const;
 unsigned char endsWith(const String &suffix) const;


 char charAt(unsigned int index) const;
 void setCharAt(unsigned int index, char c);
 char operator [] (unsigned int index) const;
 char& operator [] (unsigned int index);
 void getBytes(unsigned char *buf, unsigned int bufsize, unsigned int index=0) const;
 void toCharArray(char *buf, unsigned int bufsize, unsigned int index=0) const
  { getBytes((unsigned char *)buf, bufsize, index); }
 const char* c_str() const { return buffer; }
 char* begin() { return buffer; }
 char* end() { return buffer + length(); }
 const char* begin() const { return c_str(); }
 const char* end() const { return c_str() + length(); }


 int indexOf( char ch ) const;
 int indexOf( char ch, unsigned int fromIndex ) const;
 int indexOf( const String &str ) const;
 int indexOf( const String &str, unsigned int fromIndex ) const;
 int lastIndexOf( char ch ) const;
 int lastIndexOf( char ch, unsigned int fromIndex ) const;
 int lastIndexOf( const String &str ) const;
 int lastIndexOf( const String &str, unsigned int fromIndex ) const;
 String substring( unsigned int beginIndex ) const { return substring(beginIndex, len); };
 String substring( unsigned int beginIndex, unsigned int endIndex ) const;


 void replace(char find, char replace);
 void replace(const String& find, const String& replace);
 void remove(unsigned int index);
 void remove(unsigned int index, unsigned int count);
 void toLowerCase(void);
 void toUpperCase(void);
 void trim(void);


 long toInt(void) const;
 float toFloat(void) const;
 double toDouble(void) const;

protected:
 char *buffer;
 unsigned int capacity;
 unsigned int len;
protected:
 void init(void);
 void invalidate(void);
 unsigned char changeBuffer(unsigned int maxStrLen);
 unsigned char concat(const char *cstr, unsigned int length);


 String & copy(const char *cstr, unsigned int length);
 String & copy(const __FlashStringHelper *pstr, unsigned int length);

 void move(String &rhs);

};

class StringSumHelper : public String
{
public:
 StringSumHelper(const String &s) : String(s) {}
 StringSumHelper(const char *p) : String(p) {}
 StringSumHelper(char c) : String(c) {}
 StringSumHelper(unsigned char num) : String(num) {}
 StringSumHelper(int num) : String(num) {}
 StringSumHelper(unsigned int num) : String(num) {}
 StringSumHelper(long num) : String(num) {}
 StringSumHelper(unsigned long num) : String(num) {}
 StringSumHelper(float num) : String(num) {}
 StringSumHelper(double num) : String(num) {}
};
# 232 "/opt/arduino-1.8.5/hardware/arduino/avr/cores/arduino/Arduino.h" 2
# 1 "/opt/arduino-1.8.5/hardware/arduino/avr/cores/arduino/HardwareSerial.h" 1
# 29 "/opt/arduino-1.8.5/hardware/arduino/avr/cores/arduino/HardwareSerial.h"
# 1 "/opt/arduino-1.8.5/hardware/arduino/avr/cores/arduino/Stream.h" 1
# 26 "/opt/arduino-1.8.5/hardware/arduino/avr/cores/arduino/Stream.h"
# 1 "/opt/arduino-1.8.5/hardware/arduino/avr/cores/arduino/Print.h" 1
# 24 "/opt/arduino-1.8.5/hardware/arduino/avr/cores/arduino/Print.h"
# 1 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/stdio.h" 1 3
# 45 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/stdio.h" 3
# 1 "/opt/arduino-1.8.5/hardware/tools/avr/lib/gcc/avr/4.9.2/include/stdarg.h" 1 3 4
# 40 "/opt/arduino-1.8.5/hardware/tools/avr/lib/gcc/avr/4.9.2/include/stdarg.h" 3 4
typedef __builtin_va_list __gnuc_va_list;
# 98 "/opt/arduino-1.8.5/hardware/tools/avr/lib/gcc/avr/4.9.2/include/stdarg.h" 3 4
typedef __gnuc_va_list va_list;
# 46 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/stdio.h" 2 3




# 1 "/opt/arduino-1.8.5/hardware/tools/avr/lib/gcc/avr/4.9.2/include/stddef.h" 1 3 4
# 51 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/stdio.h" 2 3
# 244 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/stdio.h" 3
struct __file {
 char *buf;
 unsigned char unget;
 uint8_t flags;
# 263 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/stdio.h" 3
 int size;
 int len;
 int (*put)(char, struct __file *);
 int (*get)(struct __file *);
 void *udata;
};
# 277 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/stdio.h" 3
typedef struct __file FILE;
# 399 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/stdio.h" 3
extern "C" {







extern struct __file *__iob[];
# 419 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/stdio.h" 3
extern FILE *fdevopen(int (*__put)(char, FILE*), int (*__get)(FILE*));
# 436 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/stdio.h" 3
extern int fclose(FILE *__stream);
# 610 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/stdio.h" 3
extern int vfprintf(FILE *__stream, const char *__fmt, va_list __ap);





extern int vfprintf_P(FILE *__stream, const char *__fmt, va_list __ap);






extern int fputc(int __c, FILE *__stream);




extern int putc(int __c, FILE *__stream);


extern int putchar(int __c);
# 651 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/stdio.h" 3
extern int printf(const char *__fmt, ...);





extern int printf_P(const char *__fmt, ...);







extern int vprintf(const char *__fmt, va_list __ap);





extern int sprintf(char *__s, const char *__fmt, ...);





extern int sprintf_P(char *__s, const char *__fmt, ...);
# 687 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/stdio.h" 3
extern int snprintf(char *__s, size_t __n, const char *__fmt, ...);





extern int snprintf_P(char *__s, size_t __n, const char *__fmt, ...);





extern int vsprintf(char *__s, const char *__fmt, va_list ap);





extern int vsprintf_P(char *__s, const char *__fmt, va_list ap);
# 715 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/stdio.h" 3
extern int vsnprintf(char *__s, size_t __n, const char *__fmt, va_list ap);





extern int vsnprintf_P(char *__s, size_t __n, const char *__fmt, va_list ap);




extern int fprintf(FILE *__stream, const char *__fmt, ...);





extern int fprintf_P(FILE *__stream, const char *__fmt, ...);






extern int fputs(const char *__str, FILE *__stream);




extern int fputs_P(const char *__str, FILE *__stream);





extern int puts(const char *__str);




extern int puts_P(const char *__str);
# 764 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/stdio.h" 3
extern size_t fwrite(const void *__ptr, size_t __size, size_t __nmemb,
         FILE *__stream);







extern int fgetc(FILE *__stream);




extern int getc(FILE *__stream);


extern int getchar(void);
# 812 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/stdio.h" 3
extern int ungetc(int __c, FILE *__stream);
# 824 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/stdio.h" 3
extern char *fgets(char *__str, int __size, FILE *__stream);






extern char *gets(char *__str);
# 842 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/stdio.h" 3
extern size_t fread(void *__ptr, size_t __size, size_t __nmemb,
        FILE *__stream);




extern void clearerr(FILE *__stream);
# 859 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/stdio.h" 3
extern int feof(FILE *__stream);
# 870 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/stdio.h" 3
extern int ferror(FILE *__stream);






extern int vfscanf(FILE *__stream, const char *__fmt, va_list __ap);




extern int vfscanf_P(FILE *__stream, const char *__fmt, va_list __ap);







extern int fscanf(FILE *__stream, const char *__fmt, ...);




extern int fscanf_P(FILE *__stream, const char *__fmt, ...);






extern int scanf(const char *__fmt, ...);




extern int scanf_P(const char *__fmt, ...);







extern int vscanf(const char *__fmt, va_list __ap);







extern int sscanf(const char *__buf, const char *__fmt, ...);




extern int sscanf_P(const char *__buf, const char *__fmt, ...);
# 940 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/stdio.h" 3
static __inline__ int fflush(FILE *stream __attribute__((unused)))
{
 return 0;
}






__extension__ typedef long long fpos_t;
extern int fgetpos(FILE *stream, fpos_t *pos);
extern FILE *fopen(const char *path, const char *mode);
extern FILE *freopen(const char *path, const char *mode, FILE *stream);
extern FILE *fdopen(int, const char *);
extern int fseek(FILE *stream, long offset, int whence);
extern int fsetpos(FILE *stream, fpos_t *pos);
extern long ftell(FILE *stream);
extern int fileno(FILE *);
extern void perror(const char *s);
extern int remove(const char *pathname);
extern int rename(const char *oldpath, const char *newpath);
extern void rewind(FILE *stream);
extern void setbuf(FILE *stream, char *buf);
extern int setvbuf(FILE *stream, char *buf, int mode, size_t size);
extern FILE *tmpfile(void);
extern char *tmpnam (char *s);



}
# 25 "/opt/arduino-1.8.5/hardware/arduino/avr/cores/arduino/Print.h" 2


# 1 "/opt/arduino-1.8.5/hardware/arduino/avr/cores/arduino/Printable.h" 1
# 25 "/opt/arduino-1.8.5/hardware/arduino/avr/cores/arduino/Printable.h"
class Print;







class Printable
{
  public:
    virtual size_t printTo(Print& p) const = 0;
};
# 28 "/opt/arduino-1.8.5/hardware/arduino/avr/cores/arduino/Print.h" 2
# 37 "/opt/arduino-1.8.5/hardware/arduino/avr/cores/arduino/Print.h"
class Print
{
  private:
    int write_error;
    size_t printNumber(unsigned long, uint8_t);
    size_t printFloat(double, uint8_t);
  protected:
    void setWriteError(int err = 1) { write_error = err; }
  public:
    Print() : write_error(0) {}

    int getWriteError() { return write_error; }
    void clearWriteError() { setWriteError(0); }

    virtual size_t write(uint8_t) = 0;
    size_t write(const char *str) {
      if (str == __null) return 0;
      return write((const uint8_t *)str, strlen(str));
    }
    virtual size_t write(const uint8_t *buffer, size_t size);
    size_t write(const char *buffer, size_t size) {
      return write((const uint8_t *)buffer, size);
    }



    virtual int availableForWrite() { return 0; }

    size_t print(const __FlashStringHelper *);
    size_t print(const String &);
    size_t print(const char[]);
    size_t print(char);
    size_t print(unsigned char, int = 10);
    size_t print(int, int = 10);
    size_t print(unsigned int, int = 10);
    size_t print(long, int = 10);
    size_t print(unsigned long, int = 10);
    size_t print(double, int = 2);
    size_t print(const Printable&);

    size_t println(const __FlashStringHelper *);
    size_t println(const String &s);
    size_t println(const char[]);
    size_t println(char);
    size_t println(unsigned char, int = 10);
    size_t println(int, int = 10);
    size_t println(unsigned int, int = 10);
    size_t println(long, int = 10);
    size_t println(unsigned long, int = 10);
    size_t println(double, int = 2);
    size_t println(const Printable&);
    size_t println(void);

    virtual void flush() { }
};
# 27 "/opt/arduino-1.8.5/hardware/arduino/avr/cores/arduino/Stream.h" 2
# 41 "/opt/arduino-1.8.5/hardware/arduino/avr/cores/arduino/Stream.h"
enum LookaheadMode{
    SKIP_ALL,
    SKIP_NONE,
    SKIP_WHITESPACE
};



class Stream : public Print
{
  protected:
    unsigned long _timeout;
    unsigned long _startMillis;
    int timedRead();
    int timedPeek();
    int peekNextDigit(LookaheadMode lookahead, bool detectDecimal);

  public:
    virtual int available() = 0;
    virtual int read() = 0;
    virtual int peek() = 0;

    Stream() {_timeout=1000;}



  void setTimeout(unsigned long timeout);
  unsigned long getTimeout(void) { return _timeout; }

  bool find(char *target);
  bool find(uint8_t *target) { return find ((char *)target); }


  bool find(char *target, size_t length);
  bool find(uint8_t *target, size_t length) { return find ((char *)target, length); }


  bool find(char target) { return find (&target, 1); }

  bool findUntil(char *target, char *terminator);
  bool findUntil(uint8_t *target, char *terminator) { return findUntil((char *)target, terminator); }

  bool findUntil(char *target, size_t targetLen, char *terminate, size_t termLen);
  bool findUntil(uint8_t *target, size_t targetLen, char *terminate, size_t termLen) {return findUntil((char *)target, targetLen, terminate, termLen); }

  long parseInt(LookaheadMode lookahead = SKIP_ALL, char ignore = '\x01');






  float parseFloat(LookaheadMode lookahead = SKIP_ALL, char ignore = '\x01');


  size_t readBytes( char *buffer, size_t length);
  size_t readBytes( uint8_t *buffer, size_t length) { return readBytes((char *)buffer, length); }



  size_t readBytesUntil( char terminator, char *buffer, size_t length);
  size_t readBytesUntil( char terminator, uint8_t *buffer, size_t length) { return readBytesUntil(terminator, (char *)buffer, length); }




  String readString();
  String readStringUntil(char terminator);

  protected:
  long parseInt(char ignore) { return parseInt(SKIP_ALL, ignore); }
  float parseFloat(char ignore) { return parseFloat(SKIP_ALL, ignore); }




  struct MultiTarget {
    const char *str;
    size_t len;
    size_t index;
  };



  int findMulti(struct MultiTarget *targets, int tCount);
};
# 30 "/opt/arduino-1.8.5/hardware/arduino/avr/cores/arduino/HardwareSerial.h" 2
# 59 "/opt/arduino-1.8.5/hardware/arduino/avr/cores/arduino/HardwareSerial.h"
typedef uint8_t tx_buffer_index_t;




typedef uint8_t rx_buffer_index_t;
# 93 "/opt/arduino-1.8.5/hardware/arduino/avr/cores/arduino/HardwareSerial.h"
class HardwareSerial : public Stream
{
  protected:
    volatile uint8_t * const _ubrrh;
    volatile uint8_t * const _ubrrl;
    volatile uint8_t * const _ucsra;
    volatile uint8_t * const _ucsrb;
    volatile uint8_t * const _ucsrc;
    volatile uint8_t * const _udr;

    bool _written;

    volatile rx_buffer_index_t _rx_buffer_head;
    volatile rx_buffer_index_t _rx_buffer_tail;
    volatile tx_buffer_index_t _tx_buffer_head;
    volatile tx_buffer_index_t _tx_buffer_tail;




    unsigned char _rx_buffer[64];
    unsigned char _tx_buffer[64];

  public:
    inline HardwareSerial(
      volatile uint8_t *ubrrh, volatile uint8_t *ubrrl,
      volatile uint8_t *ucsra, volatile uint8_t *ucsrb,
      volatile uint8_t *ucsrc, volatile uint8_t *udr);
    void begin(unsigned long baud) { begin(baud, 0x06); }
    void begin(unsigned long, uint8_t);
    void end();
    virtual int available(void);
    virtual int peek(void);
    virtual int read(void);
    virtual int availableForWrite(void);
    virtual void flush(void);
    virtual size_t write(uint8_t);
    inline size_t write(unsigned long n) { return write((uint8_t)n); }
    inline size_t write(long n) { return write((uint8_t)n); }
    inline size_t write(unsigned int n) { return write((uint8_t)n); }
    inline size_t write(int n) { return write((uint8_t)n); }
    using Print::write;
    operator bool() { return true; }


    inline void _rx_complete_irq(void);
    void _tx_udr_empty_irq(void);
};


  extern HardwareSerial Serial;
# 159 "/opt/arduino-1.8.5/hardware/arduino/avr/cores/arduino/HardwareSerial.h"
extern void serialEventRun(void) __attribute__((weak));
# 233 "/opt/arduino-1.8.5/hardware/arduino/avr/cores/arduino/Arduino.h" 2
# 1 "/opt/arduino-1.8.5/hardware/arduino/avr/cores/arduino/USBAPI.h" 1
# 25 "/opt/arduino-1.8.5/hardware/arduino/avr/cores/arduino/USBAPI.h"
# 1 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/eeprom.h" 1 3
# 50 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/eeprom.h" 3
# 1 "/opt/arduino-1.8.5/hardware/tools/avr/lib/gcc/avr/4.9.2/include/stddef.h" 1 3 4
# 147 "/opt/arduino-1.8.5/hardware/tools/avr/lib/gcc/avr/4.9.2/include/stddef.h" 3 4
typedef int ptrdiff_t;
# 422 "/opt/arduino-1.8.5/hardware/tools/avr/lib/gcc/avr/4.9.2/include/stddef.h" 3 4
typedef struct {
  long long __max_align_ll __attribute__((__aligned__(__alignof__(long long))));
  long double __max_align_ld __attribute__((__aligned__(__alignof__(long double))));
} max_align_t;






  typedef decltype(nullptr) nullptr_t;
# 51 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/eeprom.h" 2 3
# 92 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/eeprom.h" 3
extern "C" {
# 137 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/eeprom.h" 3
uint8_t eeprom_read_byte (const uint8_t *__p) __attribute__((__pure__));




uint16_t eeprom_read_word (const uint16_t *__p) __attribute__((__pure__));




uint32_t eeprom_read_dword (const uint32_t *__p) __attribute__((__pure__));




float eeprom_read_float (const float *__p) __attribute__((__pure__));





void eeprom_read_block (void *__dst, const void *__src, size_t __n);





void eeprom_write_byte (uint8_t *__p, uint8_t __value);




void eeprom_write_word (uint16_t *__p, uint16_t __value);




void eeprom_write_dword (uint32_t *__p, uint32_t __value);




void eeprom_write_float (float *__p, float __value);





void eeprom_write_block (const void *__src, void *__dst, size_t __n);





void eeprom_update_byte (uint8_t *__p, uint8_t __value);




void eeprom_update_word (uint16_t *__p, uint16_t __value);




void eeprom_update_dword (uint32_t *__p, uint32_t __value);




void eeprom_update_float (float *__p, float __value);





void eeprom_update_block (const void *__src, void *__dst, size_t __n);
# 241 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/avr/eeprom.h" 3
}
# 26 "/opt/arduino-1.8.5/hardware/arduino/avr/cores/arduino/USBAPI.h" 2

# 1 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/util/delay.h" 1 3
# 45 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/util/delay.h" 3
# 1 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/util/delay_basic.h" 1 3
# 40 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/util/delay_basic.h" 3
static __inline__ void _delay_loop_1(uint8_t __count) __attribute__((__always_inline__));
static __inline__ void _delay_loop_2(uint16_t __count) __attribute__((__always_inline__));
# 80 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/util/delay_basic.h" 3
void
_delay_loop_1(uint8_t __count)
{
 __asm__ volatile (
  "1: dec %0" "\n\t"
  "brne 1b"
  : "=r" (__count)
  : "0" (__count)
 );
}
# 102 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/util/delay_basic.h" 3
void
_delay_loop_2(uint16_t __count)
{
 __asm__ volatile (
  "1: sbiw %0,1" "\n\t"
  "brne 1b"
  : "=w" (__count)
  : "0" (__count)
 );
}
# 46 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/util/delay.h" 2 3
# 86 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/util/delay.h" 3
static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
# 165 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/util/delay.h" 3
void
_delay_ms(double __ms)
{
 double __tmp ;



 uint32_t __ticks_dc;
 extern void __builtin_avr_delay_cycles(unsigned long);
 __tmp = ((16000000L) / 1e3) * __ms;
# 184 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/util/delay.h" 3
  __ticks_dc = (uint32_t)(ceil(fabs(__tmp)));


 __builtin_avr_delay_cycles(__ticks_dc);
# 210 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/util/delay.h" 3
}
# 254 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/util/delay.h" 3
void
_delay_us(double __us)
{
 double __tmp ;



 uint32_t __ticks_dc;
 extern void __builtin_avr_delay_cycles(unsigned long);
 __tmp = ((16000000L) / 1e6) * __us;
# 273 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/util/delay.h" 3
  __ticks_dc = (uint32_t)(ceil(fabs(__tmp)));


 __builtin_avr_delay_cycles(__ticks_dc);
# 299 "/opt/arduino-1.8.5/hardware/tools/avr/avr/include/util/delay.h" 3
}
# 28 "/opt/arduino-1.8.5/hardware/arduino/avr/cores/arduino/USBAPI.h" 2

typedef unsigned char u8;
typedef unsigned short u16;
typedef unsigned long u32;

# 1 "/opt/arduino-1.8.5/hardware/arduino/avr/cores/arduino/Arduino.h" 1
# 34 "/opt/arduino-1.8.5/hardware/arduino/avr/cores/arduino/USBAPI.h" 2
# 234 "/opt/arduino-1.8.5/hardware/arduino/avr/cores/arduino/Arduino.h" 2




uint16_t makeWord(uint16_t w);
uint16_t makeWord(byte h, byte l);



unsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);
unsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);

void tone(uint8_t _pin, unsigned int frequency, unsigned long duration = 0);
void noTone(uint8_t _pin);


long random(long);
long random(long, long);
void randomSeed(unsigned long);
long map(long, long, long, long, long);



# 1 "/opt/arduino-1.8.5/hardware/arduino/avr/variants/standard/pins_arduino.h" 1
# 43 "/opt/arduino-1.8.5/hardware/arduino/avr/variants/standard/pins_arduino.h"
static const uint8_t SS = (10);
static const uint8_t MOSI = (11);
static const uint8_t MISO = (12);
static const uint8_t SCK = (13);




static const uint8_t SDA = (18);
static const uint8_t SCL = (19);
# 65 "/opt/arduino-1.8.5/hardware/arduino/avr/variants/standard/pins_arduino.h"
static const uint8_t A0 = (14);
static const uint8_t A1 = (15);
static const uint8_t A2 = (16);
static const uint8_t A3 = (17);
static const uint8_t A4 = (18);
static const uint8_t A5 = (19);
static const uint8_t A6 = (20);
static const uint8_t A7 = (21);
# 258 "/opt/arduino-1.8.5/hardware/arduino/avr/cores/arduino/Arduino.h" 2
# 41 "../lib/Adafruit_ILI9341/Adafruit_ILI9341.h" 2
# 1 "/opt/arduino-1.8.5/hardware/arduino/avr/cores/arduino/Print.h" 1
# 42 "../lib/Adafruit_ILI9341/Adafruit_ILI9341.h" 2



# 1 "/opt/arduino-1.8.5/hardware/arduino/avr/libraries/SPI/src/SPI.h" 1
# 72 "/opt/arduino-1.8.5/hardware/arduino/avr/libraries/SPI/src/SPI.h"
class SPISettings {
public:
  SPISettings(uint32_t clock, uint8_t bitOrder, uint8_t dataMode) {
    if (__builtin_constant_p(clock)) {
      init_AlwaysInline(clock, bitOrder, dataMode);
    } else {
      init_MightInline(clock, bitOrder, dataMode);
    }
  }
  SPISettings() {
    init_AlwaysInline(4000000, 1, 0x00);
  }
private:
  void init_MightInline(uint32_t clock, uint8_t bitOrder, uint8_t dataMode) {
    init_AlwaysInline(clock, bitOrder, dataMode);
  }
  void init_AlwaysInline(uint32_t clock, uint8_t bitOrder, uint8_t dataMode)
    __attribute__((__always_inline__)) {
# 107 "/opt/arduino-1.8.5/hardware/arduino/avr/libraries/SPI/src/SPI.h"
    uint8_t clockDiv;





    if (__builtin_constant_p(clock)) {
      if (clock >= 16000000L / 2) {
        clockDiv = 0;
      } else if (clock >= 16000000L / 4) {
        clockDiv = 1;
      } else if (clock >= 16000000L / 8) {
        clockDiv = 2;
      } else if (clock >= 16000000L / 16) {
        clockDiv = 3;
      } else if (clock >= 16000000L / 32) {
        clockDiv = 4;
      } else if (clock >= 16000000L / 64) {
        clockDiv = 5;
      } else {
        clockDiv = 6;
      }
    } else {
      uint32_t clockSetting = 16000000L / 2;
      clockDiv = 0;
      while (clockDiv < 6 && clock < clockSetting) {
        clockSetting /= 2;
        clockDiv++;
      }
    }


    if (clockDiv == 6)
    clockDiv = 7;


    clockDiv ^= 0x1;


    spcr = (1 << (6)) | (1 << (4)) | ((bitOrder == 0) ? (1 << (5)) : 0) |
      (dataMode & 0x0C) | ((clockDiv >> 1) & 0x03);
    spsr = clockDiv & 0x01;
  }
  uint8_t spcr;
  uint8_t spsr;
  friend class SPIClass;
};


class SPIClass {
public:

  static void begin();






  static void usingInterrupt(uint8_t interruptNumber);

  static void notUsingInterrupt(uint8_t interruptNumber);
# 178 "/opt/arduino-1.8.5/hardware/arduino/avr/libraries/SPI/src/SPI.h"
  inline static void beginTransaction(SPISettings settings) {
    if (interruptMode > 0) {
      uint8_t sreg = (*(volatile uint8_t *)((0x3F) + 0x20));
      __asm__ __volatile__ ("cli" ::: "memory");


      if (interruptMode == 1) {
        interruptSave = (*(volatile uint8_t *)((0x1D) + 0x20));
        (*(volatile uint8_t *)((0x1D) + 0x20)) &= ~interruptMask;
        (*(volatile uint8_t *)((0x3F) + 0x20)) = sreg;
      } else

      {
        interruptSave = sreg;
      }
    }
# 203 "/opt/arduino-1.8.5/hardware/arduino/avr/libraries/SPI/src/SPI.h"
    (*(volatile uint8_t *)((0x2C) + 0x20)) = settings.spcr;
    (*(volatile uint8_t *)((0x2D) + 0x20)) = settings.spsr;
  }


  inline static uint8_t transfer(uint8_t data) {
    (*(volatile uint8_t *)((0x2E) + 0x20)) = data;






    asm volatile("nop");
    while (!((*(volatile uint8_t *)((0x2D) + 0x20)) & (1 << (7)))) ;
    return (*(volatile uint8_t *)((0x2E) + 0x20));
  }
  inline static uint16_t transfer16(uint16_t data) {
    union { uint16_t val; struct { uint8_t lsb; uint8_t msb; }; } in, out;
    in.val = data;
    if (!((*(volatile uint8_t *)((0x2C) + 0x20)) & (1 << (5)))) {
      (*(volatile uint8_t *)((0x2E) + 0x20)) = in.msb;
      asm volatile("nop");
      while (!((*(volatile uint8_t *)((0x2D) + 0x20)) & (1 << (7)))) ;
      out.msb = (*(volatile uint8_t *)((0x2E) + 0x20));
      (*(volatile uint8_t *)((0x2E) + 0x20)) = in.lsb;
      asm volatile("nop");
      while (!((*(volatile uint8_t *)((0x2D) + 0x20)) & (1 << (7)))) ;
      out.lsb = (*(volatile uint8_t *)((0x2E) + 0x20));
    } else {
      (*(volatile uint8_t *)((0x2E) + 0x20)) = in.lsb;
      asm volatile("nop");
      while (!((*(volatile uint8_t *)((0x2D) + 0x20)) & (1 << (7)))) ;
      out.lsb = (*(volatile uint8_t *)((0x2E) + 0x20));
      (*(volatile uint8_t *)((0x2E) + 0x20)) = in.msb;
      asm volatile("nop");
      while (!((*(volatile uint8_t *)((0x2D) + 0x20)) & (1 << (7)))) ;
      out.msb = (*(volatile uint8_t *)((0x2E) + 0x20));
    }
    return out.val;
  }
  inline static void transfer(void *buf, size_t count) {
    if (count == 0) return;
    uint8_t *p = (uint8_t *)buf;
    (*(volatile uint8_t *)((0x2E) + 0x20)) = *p;
    while (--count > 0) {
      uint8_t out = *(p + 1);
      while (!((*(volatile uint8_t *)((0x2D) + 0x20)) & (1 << (7)))) ;
      uint8_t in = (*(volatile uint8_t *)((0x2E) + 0x20));
      (*(volatile uint8_t *)((0x2E) + 0x20)) = out;
      *p++ = in;
    }
    while (!((*(volatile uint8_t *)((0x2D) + 0x20)) & (1 << (7)))) ;
    *p = (*(volatile uint8_t *)((0x2E) + 0x20));
  }


  inline static void endTransaction(void) {
# 269 "/opt/arduino-1.8.5/hardware/arduino/avr/libraries/SPI/src/SPI.h"
    if (interruptMode > 0) {

      uint8_t sreg = (*(volatile uint8_t *)((0x3F) + 0x20));

      __asm__ __volatile__ ("cli" ::: "memory");

      if (interruptMode == 1) {
        (*(volatile uint8_t *)((0x1D) + 0x20)) = interruptSave;
        (*(volatile uint8_t *)((0x3F) + 0x20)) = sreg;
      } else

      {
        (*(volatile uint8_t *)((0x3F) + 0x20)) = interruptSave;
      }
    }
  }


  static void end();



  inline static void setBitOrder(uint8_t bitOrder) {
    if (bitOrder == 0) (*(volatile uint8_t *)((0x2C) + 0x20)) |= (1 << (5));
    else (*(volatile uint8_t *)((0x2C) + 0x20)) &= ~((1 << (5)));
  }


  inline static void setDataMode(uint8_t dataMode) {
    (*(volatile uint8_t *)((0x2C) + 0x20)) = ((*(volatile uint8_t *)((0x2C) + 0x20)) & ~0x0C) | dataMode;
  }


  inline static void setClockDivider(uint8_t clockDiv) {
    (*(volatile uint8_t *)((0x2C) + 0x20)) = ((*(volatile uint8_t *)((0x2C) + 0x20)) & ~0x03) | (clockDiv & 0x03);
    (*(volatile uint8_t *)((0x2D) + 0x20)) = ((*(volatile uint8_t *)((0x2D) + 0x20)) & ~0x01) | ((clockDiv >> 2) & 0x01);
  }



  inline static void attachInterrupt() { (*(volatile uint8_t *)((0x2C) + 0x20)) |= (1 << (7)); }
  inline static void detachInterrupt() { (*(volatile uint8_t *)((0x2C) + 0x20)) &= ~(1 << (7)); }

private:
  static uint8_t initialized;
  static uint8_t interruptMode;
  static uint8_t interruptMask;
  static uint8_t interruptSave;



};

extern SPIClass SPI;
# 46 "../lib/Adafruit_ILI9341/Adafruit_ILI9341.h" 2
# 1 "../lib/Adafruit_GFX/Adafruit_GFX.h" 1
# 10 "../lib/Adafruit_GFX/Adafruit_GFX.h"
# 1 "../lib/Adafruit_GFX/gfxfont.h" 1
# 11 "../lib/Adafruit_GFX/gfxfont.h"
typedef struct {
 uint16_t bitmapOffset;
 uint8_t width;
        uint8_t height;
 uint8_t xAdvance;
 int8_t xOffset;
        int8_t yOffset;
} GFXglyph;


typedef struct {
 uint8_t *bitmap;
 GFXglyph *glyph;
 uint8_t first;
        uint8_t last;
 uint8_t yAdvance;
} GFXfont;
# 11 "../lib/Adafruit_GFX/Adafruit_GFX.h" 2


class Adafruit_GFX : public Print {

 public:

  Adafruit_GFX(int16_t w, int16_t h);


  virtual void drawPixel(int16_t x, int16_t y, uint16_t color) = 0;




  virtual void startWrite(void);
  virtual void writePixel(int16_t x, int16_t y, uint16_t color);
  virtual void writeFillRect(int16_t x, int16_t y, int16_t w, int16_t h, uint16_t color);
  virtual void writeFastVLine(int16_t x, int16_t y, int16_t h, uint16_t color);
  virtual void writeFastHLine(int16_t x, int16_t y, int16_t w, uint16_t color);
  virtual void writeLine(int16_t x0, int16_t y0, int16_t x1, int16_t y1, uint16_t color);
  virtual void endWrite(void);




  virtual void setRotation(uint8_t r);
  virtual void invertDisplay(boolean i);




  virtual void

    drawFastVLine(int16_t x, int16_t y, int16_t h, uint16_t color),
    drawFastHLine(int16_t x, int16_t y, int16_t w, uint16_t color),
    fillRect(int16_t x, int16_t y, int16_t w, int16_t h, uint16_t color),
    fillScreen(uint16_t color),

    drawLine(int16_t x0, int16_t y0, int16_t x1, int16_t y1, uint16_t color),
    drawRect(int16_t x, int16_t y, int16_t w, int16_t h, uint16_t color);


  void
    drawCircle(int16_t x0, int16_t y0, int16_t r, uint16_t color),
    drawCircleHelper(int16_t x0, int16_t y0, int16_t r, uint8_t cornername,
      uint16_t color),
    fillCircle(int16_t x0, int16_t y0, int16_t r, uint16_t color),
    fillCircleHelper(int16_t x0, int16_t y0, int16_t r, uint8_t cornername,
      int16_t delta, uint16_t color),
    drawTriangle(int16_t x0, int16_t y0, int16_t x1, int16_t y1,
      int16_t x2, int16_t y2, uint16_t color),
    fillTriangle(int16_t x0, int16_t y0, int16_t x1, int16_t y1,
      int16_t x2, int16_t y2, uint16_t color),
    drawRoundRect(int16_t x0, int16_t y0, int16_t w, int16_t h,
      int16_t radius, uint16_t color),
    fillRoundRect(int16_t x0, int16_t y0, int16_t w, int16_t h,
      int16_t radius, uint16_t color),
    drawBitmap(int16_t x, int16_t y, const uint8_t bitmap[],
      int16_t w, int16_t h, uint16_t color),
    drawBitmap(int16_t x, int16_t y, const uint8_t bitmap[],
      int16_t w, int16_t h, uint16_t color, uint16_t bg),
    drawBitmap(int16_t x, int16_t y, uint8_t *bitmap,
      int16_t w, int16_t h, uint16_t color),
    drawBitmap(int16_t x, int16_t y, uint8_t *bitmap,
      int16_t w, int16_t h, uint16_t color, uint16_t bg),
    drawXBitmap(int16_t x, int16_t y, const uint8_t bitmap[],
      int16_t w, int16_t h, uint16_t color),
    drawGrayscaleBitmap(int16_t x, int16_t y, const uint8_t bitmap[],
      int16_t w, int16_t h),
    drawGrayscaleBitmap(int16_t x, int16_t y, uint8_t *bitmap,
      int16_t w, int16_t h),
    drawGrayscaleBitmap(int16_t x, int16_t y,
      const uint8_t bitmap[], const uint8_t mask[],
      int16_t w, int16_t h),
    drawGrayscaleBitmap(int16_t x, int16_t y,
      uint8_t *bitmap, uint8_t *mask, int16_t w, int16_t h),
    drawRGBBitmap(int16_t x, int16_t y, const uint16_t bitmap[],
      int16_t w, int16_t h),
    drawRGBBitmap(int16_t x, int16_t y, uint16_t *bitmap,
      int16_t w, int16_t h),
    drawRGBBitmap(int16_t x, int16_t y,
      const uint16_t bitmap[], const uint8_t mask[],
      int16_t w, int16_t h),
    drawRGBBitmap(int16_t x, int16_t y,
      uint16_t *bitmap, uint8_t *mask, int16_t w, int16_t h),
    drawChar(int16_t x, int16_t y, unsigned char c, uint16_t color,
      uint16_t bg, uint8_t size),
    setCursor(int16_t x, int16_t y),
    setTextColor(uint16_t c),
    setTextColor(uint16_t c, uint16_t bg),
    setTextSize(uint8_t s),
    setTextWrap(boolean w),
    cp437(boolean x=true),
    setFont(const GFXfont *f = __null),
    getTextBounds(char *string, int16_t x, int16_t y,
      int16_t *x1, int16_t *y1, uint16_t *w, uint16_t *h),
    getTextBounds(const __FlashStringHelper *s, int16_t x, int16_t y,
      int16_t *x1, int16_t *y1, uint16_t *w, uint16_t *h);


  virtual size_t write(uint8_t);




  int16_t height(void) const;
  int16_t width(void) const;

  uint8_t getRotation(void) const;


  int16_t getCursorX(void) const;
  int16_t getCursorY(void) const;

 protected:
  void
    charBounds(char c, int16_t *x, int16_t *y,
      int16_t *minx, int16_t *miny, int16_t *maxx, int16_t *maxy);
  const int16_t
    WIDTH,
    HEIGHT;
  int16_t
    _width,
    _height,
    cursor_x,
    cursor_y;
  uint16_t
    textcolor,
    textbgcolor;
  uint8_t
    textsize,
    rotation;
  boolean
    wrap,
    _cp437;
  GFXfont
    *gfxFont;
};



class Adafruit_GFX_Button {

 public:
  Adafruit_GFX_Button(void);

  void initButton(Adafruit_GFX *gfx, int16_t x, int16_t y,
   uint16_t w, uint16_t h, uint16_t outline, uint16_t fill,
   uint16_t textcolor, char *label, uint8_t textsize);

  void initButtonUL(Adafruit_GFX *gfx, int16_t x1, int16_t y1,
   uint16_t w, uint16_t h, uint16_t outline, uint16_t fill,
   uint16_t textcolor, char *label, uint8_t textsize);
  void drawButton(boolean inverted = false);
  boolean contains(int16_t x, int16_t y);

  void press(boolean p);
  boolean isPressed();
  boolean justPressed();
  boolean justReleased();

 private:
  Adafruit_GFX *_gfx;
  int16_t _x1, _y1;
  uint16_t _w, _h;
  uint8_t _textsize;
  uint16_t _outlinecolor, _fillcolor, _textcolor;
  char _label[10];

  boolean currstate, laststate;
};



class GFXcanvas1 : public Adafruit_GFX {
 public:
  GFXcanvas1(uint16_t w, uint16_t h);
  ~GFXcanvas1(void);
  void drawPixel(int16_t x, int16_t y, uint16_t color),
           fillScreen(uint16_t color);
  uint8_t *getBuffer(void);
 private:
  uint8_t *buffer;
};



class GFXcanvas8 : public Adafruit_GFX {
 public:
  GFXcanvas8(uint16_t w, uint16_t h);
  ~GFXcanvas8(void);
  void drawPixel(int16_t x, int16_t y, uint16_t color),
           fillScreen(uint16_t color),
           writeFastHLine(int16_t x, int16_t y, int16_t w, uint16_t color);

  uint8_t *getBuffer(void);
 private:
  uint8_t *buffer;
};



class GFXcanvas16 : public Adafruit_GFX {
 public:
  GFXcanvas16(uint16_t w, uint16_t h);
  ~GFXcanvas16(void);
  void drawPixel(int16_t x, int16_t y, uint16_t color),
            fillScreen(uint16_t color);
  uint16_t *getBuffer(void);
 private:
  uint16_t *buffer;
};
# 47 "../lib/Adafruit_ILI9341/Adafruit_ILI9341.h" 2
# 143 "../lib/Adafruit_ILI9341/Adafruit_ILI9341.h"
class Adafruit_ILI9341 : public Adafruit_GFX {
    protected:

    public:
        Adafruit_ILI9341(int8_t _CS, int8_t _DC, int8_t _MOSI, int8_t _SCLK, int8_t _RST = -1, int8_t _MISO = -1);
        Adafruit_ILI9341(int8_t _CS, int8_t _DC, int8_t _RST = -1);


        void begin(uint32_t freq = 0);



        void setRotation(uint8_t r);
        void invertDisplay(boolean i);
        void scrollTo(uint16_t y);


        void drawPixel(int16_t x, int16_t y, uint16_t color);


        void startWrite(void);
        void endWrite(void);
        void writePixel(int16_t x, int16_t y, uint16_t color);
        void writeFillRect(int16_t x, int16_t y, int16_t w, int16_t h, uint16_t color);
        void writeFastVLine(int16_t x, int16_t y, int16_t h, uint16_t color);
        void writeFastHLine(int16_t x, int16_t y, int16_t w, uint16_t color);


        void setAddrWindow(uint16_t x, uint16_t y, uint16_t w, uint16_t h);
        void writePixel(uint16_t color);
        void writePixels(uint16_t * colors, uint32_t len);
        void writeColor(uint16_t color, uint32_t len);
 void pushColor(uint16_t color);


        void drawFastVLine(int16_t x, int16_t y, int16_t h, uint16_t color);
        void drawFastHLine(int16_t x, int16_t y, int16_t w, uint16_t color);
        void fillRect(int16_t x, int16_t y, int16_t w, int16_t h, uint16_t color);

        using Adafruit_GFX::drawRGBBitmap;
        void drawRGBBitmap(int16_t x, int16_t y,
                    uint16_t *pcolors, int16_t w, int16_t h);

        uint8_t readcommand8(uint8_t reg, uint8_t index = 0);

        uint16_t color565(uint8_t r, uint8_t g, uint8_t b);

    private:



        uint32_t _freq;

        int8_t _cs, _dc, _rst, _sclk, _mosi, _miso;

        volatile uint8_t *mosiport, *misoport, *clkport, *dcport, *csport;
        uint8_t mosipinmask, misopinmask, clkpinmask, cspinmask, dcpinmask;
# 217 "../lib/Adafruit_ILI9341/Adafruit_ILI9341.h"
        void writeCommand(uint8_t cmd);
        void spiWrite(uint8_t v);
        uint8_t spiRead(void);
};
# 50 "../lib/Adafruit_ILI9341/Adafruit_ILI9341.cpp" 2



# 1 "/opt/arduino-1.8.5/hardware/arduino/avr/cores/arduino/wiring_private.h" 1
# 34 "/opt/arduino-1.8.5/hardware/arduino/avr/cores/arduino/wiring_private.h"
extern "C"{
# 44 "/opt/arduino-1.8.5/hardware/arduino/avr/cores/arduino/wiring_private.h"
uint32_t countPulseASM(volatile uint8_t *port, uint8_t bit, uint8_t stateMask, unsigned long maxloops);
# 66 "/opt/arduino-1.8.5/hardware/arduino/avr/cores/arduino/wiring_private.h"
typedef void (*voidFuncPtr)(void);


}
# 54 "../lib/Adafruit_ILI9341/Adafruit_ILI9341.cpp" 2


# 1 "/opt/arduino-1.8.5/hardware/tools/avr/lib/gcc/avr/4.9.2/include-fixed/limits.h" 1 3 4
# 57 "../lib/Adafruit_ILI9341/Adafruit_ILI9341.cpp" 2
# 159 "../lib/Adafruit_ILI9341/Adafruit_ILI9341.cpp"
static inline uint8_t _avr_spi_read(void) __attribute__((always_inline));
static inline uint8_t _avr_spi_read(void) {
    uint8_t r = 0;
    (*(volatile uint8_t *)((0x2E) + 0x20)) = r;
    while(!((*(volatile uint8_t *)((0x2D) + 0x20)) & (1 << (7))));
    r = (*(volatile uint8_t *)((0x2E) + 0x20));
    return r;
}
# 212 "../lib/Adafruit_ILI9341/Adafruit_ILI9341.cpp"
uint16_t Adafruit_ILI9341::color565(uint8_t red, uint8_t green, uint8_t blue) {
    return ((red & 0xF8) << 8) | ((green & 0xFC) << 3) | ((blue & 0xF8) >> 3);
}
# 227 "../lib/Adafruit_ILI9341/Adafruit_ILI9341.cpp"
Adafruit_ILI9341::Adafruit_ILI9341(int8_t cs, int8_t dc, int8_t mosi,
        int8_t sclk, int8_t rst, int8_t miso) : Adafruit_GFX(240, 320) {
    _cs = cs;
    _dc = dc;
    _rst = rst;
    _sclk = sclk;
    _mosi = mosi;
    _miso = miso;
    _freq = 0;

    csport = ( (volatile uint8_t *)( (__extension__({ uint16_t __addr16 = (uint16_t)((uint16_t)(port_to_output_PGM + (( (__extension__({ uint16_t __addr16 = (uint16_t)((uint16_t)(digital_pin_to_port_PGM + (_cs))); uint8_t __result; __asm__ __volatile__ ( "lpm %0, Z" "\n\t" : "=r" (__result) : "z" (__addr16) ); __result; })) )))); uint16_t __result; __asm__ __volatile__ ( "lpm %A0, Z+" "\n\t" "lpm %B0, Z" "\n\t" : "=r" (__result), "=z" (__addr16) : "1" (__addr16) ); __result; }))) );
    cspinmask = ( (__extension__({ uint16_t __addr16 = (uint16_t)((uint16_t)(digital_pin_to_bit_mask_PGM + (_cs))); uint8_t __result; __asm__ __volatile__ ( "lpm %0, Z" "\n\t" : "=r" (__result) : "z" (__addr16) ); __result; })) );
    dcport = ( (volatile uint8_t *)( (__extension__({ uint16_t __addr16 = (uint16_t)((uint16_t)(port_to_output_PGM + (( (__extension__({ uint16_t __addr16 = (uint16_t)((uint16_t)(digital_pin_to_port_PGM + (_dc))); uint8_t __result; __asm__ __volatile__ ( "lpm %0, Z" "\n\t" : "=r" (__result) : "z" (__addr16) ); __result; })) )))); uint16_t __result; __asm__ __volatile__ ( "lpm %A0, Z+" "\n\t" "lpm %B0, Z" "\n\t" : "=r" (__result), "=z" (__addr16) : "1" (__addr16) ); __result; }))) );
    dcpinmask = ( (__extension__({ uint16_t __addr16 = (uint16_t)((uint16_t)(digital_pin_to_bit_mask_PGM + (_dc))); uint8_t __result; __asm__ __volatile__ ( "lpm %0, Z" "\n\t" : "=r" (__result) : "z" (__addr16) ); __result; })) );
    clkport = ( (volatile uint8_t *)( (__extension__({ uint16_t __addr16 = (uint16_t)((uint16_t)(port_to_output_PGM + (( (__extension__({ uint16_t __addr16 = (uint16_t)((uint16_t)(digital_pin_to_port_PGM + (_sclk))); uint8_t __result; __asm__ __volatile__ ( "lpm %0, Z" "\n\t" : "=r" (__result) : "z" (__addr16) ); __result; })) )))); uint16_t __result; __asm__ __volatile__ ( "lpm %A0, Z+" "\n\t" "lpm %B0, Z" "\n\t" : "=r" (__result), "=z" (__addr16) : "1" (__addr16) ); __result; }))) );
    clkpinmask = ( (__extension__({ uint16_t __addr16 = (uint16_t)((uint16_t)(digital_pin_to_bit_mask_PGM + (_sclk))); uint8_t __result; __asm__ __volatile__ ( "lpm %0, Z" "\n\t" : "=r" (__result) : "z" (__addr16) ); __result; })) );
    mosiport = ( (volatile uint8_t *)( (__extension__({ uint16_t __addr16 = (uint16_t)((uint16_t)(port_to_output_PGM + (( (__extension__({ uint16_t __addr16 = (uint16_t)((uint16_t)(digital_pin_to_port_PGM + (_mosi))); uint8_t __result; __asm__ __volatile__ ( "lpm %0, Z" "\n\t" : "=r" (__result) : "z" (__addr16) ); __result; })) )))); uint16_t __result; __asm__ __volatile__ ( "lpm %A0, Z+" "\n\t" "lpm %B0, Z" "\n\t" : "=r" (__result), "=z" (__addr16) : "1" (__addr16) ); __result; }))) );
    mosipinmask = ( (__extension__({ uint16_t __addr16 = (uint16_t)((uint16_t)(digital_pin_to_bit_mask_PGM + (_mosi))); uint8_t __result; __asm__ __volatile__ ( "lpm %0, Z" "\n\t" : "=r" (__result) : "z" (__addr16) ); __result; })) );
    if(miso >= 0){
        misoport = ( (volatile uint8_t *)( (__extension__({ uint16_t __addr16 = (uint16_t)((uint16_t)(port_to_input_PGM + (( (__extension__({ uint16_t __addr16 = (uint16_t)((uint16_t)(digital_pin_to_port_PGM + (_miso))); uint8_t __result; __asm__ __volatile__ ( "lpm %0, Z" "\n\t" : "=r" (__result) : "z" (__addr16) ); __result; })) )))); uint16_t __result; __asm__ __volatile__ ( "lpm %A0, Z+" "\n\t" "lpm %B0, Z" "\n\t" : "=r" (__result), "=z" (__addr16) : "1" (__addr16) ); __result; }))) );
        misopinmask = ( (__extension__({ uint16_t __addr16 = (uint16_t)((uint16_t)(digital_pin_to_bit_mask_PGM + (_miso))); uint8_t __result; __asm__ __volatile__ ( "lpm %0, Z" "\n\t" : "=r" (__result) : "z" (__addr16) ); __result; })) );
    } else {
        misoport = 0;
        misopinmask = 0;
    }

}
# 263 "../lib/Adafruit_ILI9341/Adafruit_ILI9341.cpp"
Adafruit_ILI9341::Adafruit_ILI9341(int8_t cs, int8_t dc, int8_t rst) : Adafruit_GFX(240, 320) {
    _cs = cs;
    _dc = dc;
    _rst = rst;
    _sclk = -1;
    _mosi = -1;
    _miso = -1;
    _freq = 0;

    csport = ( (volatile uint8_t *)( (__extension__({ uint16_t __addr16 = (uint16_t)((uint16_t)(port_to_output_PGM + (( (__extension__({ uint16_t __addr16 = (uint16_t)((uint16_t)(digital_pin_to_port_PGM + (_cs))); uint8_t __result; __asm__ __volatile__ ( "lpm %0, Z" "\n\t" : "=r" (__result) : "z" (__addr16) ); __result; })) )))); uint16_t __result; __asm__ __volatile__ ( "lpm %A0, Z+" "\n\t" "lpm %B0, Z" "\n\t" : "=r" (__result), "=z" (__addr16) : "1" (__addr16) ); __result; }))) );
    cspinmask = ( (__extension__({ uint16_t __addr16 = (uint16_t)((uint16_t)(digital_pin_to_bit_mask_PGM + (_cs))); uint8_t __result; __asm__ __volatile__ ( "lpm %0, Z" "\n\t" : "=r" (__result) : "z" (__addr16) ); __result; })) );
    dcport = ( (volatile uint8_t *)( (__extension__({ uint16_t __addr16 = (uint16_t)((uint16_t)(port_to_output_PGM + (( (__extension__({ uint16_t __addr16 = (uint16_t)((uint16_t)(digital_pin_to_port_PGM + (_dc))); uint8_t __result; __asm__ __volatile__ ( "lpm %0, Z" "\n\t" : "=r" (__result) : "z" (__addr16) ); __result; })) )))); uint16_t __result; __asm__ __volatile__ ( "lpm %A0, Z+" "\n\t" "lpm %B0, Z" "\n\t" : "=r" (__result), "=z" (__addr16) : "1" (__addr16) ); __result; }))) );
    dcpinmask = ( (__extension__({ uint16_t __addr16 = (uint16_t)((uint16_t)(digital_pin_to_bit_mask_PGM + (_dc))); uint8_t __result; __asm__ __volatile__ ( "lpm %0, Z" "\n\t" : "=r" (__result) : "z" (__addr16) ); __result; })) );
    clkport = 0;
    clkpinmask = 0;
    mosiport = 0;
    mosipinmask = 0;
    misoport = 0;
    misopinmask = 0;

}
# 295 "../lib/Adafruit_ILI9341/Adafruit_ILI9341.cpp"
void Adafruit_ILI9341::begin(uint32_t freq)

{



    if(!freq){
        freq = 8000000;
    }
    _freq = freq;


    pinMode(_dc, 0x1);
    digitalWrite(_dc, 0x0);
    pinMode(_cs, 0x1);
    digitalWrite(_cs, 0x1);


    if(_sclk >= 0){
        pinMode(_mosi, 0x1);
        digitalWrite(_mosi, 0x0);
        pinMode(_sclk, 0x1);
        digitalWrite(_sclk, 0x1);
        if(_miso >= 0){
            pinMode(_miso, 0x0);
        }
    }


    if(_sclk < 0){SPI.begin();};


    if (_rst >= 0) {
        pinMode(_rst, 0x1);
        digitalWrite(_rst, 0x1);
        delay(100);
        digitalWrite(_rst, 0x0);
        delay(100);
        digitalWrite(_rst, 0x1);
        delay(200);
    }

    startWrite();

    writeCommand(0xEF);
    spiWrite(0x03);
    spiWrite(0x80);
    spiWrite(0x02);

    writeCommand(0xCF);
    spiWrite(0x00);
    spiWrite(0XC1);
    spiWrite(0X30);

    writeCommand(0xED);
    spiWrite(0x64);
    spiWrite(0x03);
    spiWrite(0X12);
    spiWrite(0X81);

    writeCommand(0xE8);
    spiWrite(0x85);
    spiWrite(0x00);
    spiWrite(0x78);

    writeCommand(0xCB);
    spiWrite(0x39);
    spiWrite(0x2C);
    spiWrite(0x00);
    spiWrite(0x34);
    spiWrite(0x02);

    writeCommand(0xF7);
    spiWrite(0x20);

    writeCommand(0xEA);
    spiWrite(0x00);
    spiWrite(0x00);

    writeCommand(0xC0);
    spiWrite(0x23);

    writeCommand(0xC1);
    spiWrite(0x10);

    writeCommand(0xC5);
    spiWrite(0x3e);
    spiWrite(0x28);

    writeCommand(0xC7);
    spiWrite(0x86);

    writeCommand(0x36);
    spiWrite(0x48);

    writeCommand(0x37);
    if(_sclk < 0){{(*(volatile uint8_t *)((0x2E) + 0x20)) = ((0) >> 8); while(!((*(volatile uint8_t *)((0x2D) + 0x20)) & (1 << (7))));}; {(*(volatile uint8_t *)((0x2E) + 0x20)) = (0); while(!((*(volatile uint8_t *)((0x2D) + 0x20)) & (1 << (7))));};}else{spiWrite((0) >> 8); spiWrite(0);};

    writeCommand(0x3A);
    spiWrite(0x55);

    writeCommand(0xB1);
    spiWrite(0x00);
    spiWrite(0x18);

    writeCommand(0xB6);
    spiWrite(0x08);
    spiWrite(0x82);
    spiWrite(0x27);

    writeCommand(0xF2);
    spiWrite(0x00);

    writeCommand(0x26);
    spiWrite(0x01);

    writeCommand(0xE0);
    spiWrite(0x0F);
    spiWrite(0x31);
    spiWrite(0x2B);
    spiWrite(0x0C);
    spiWrite(0x0E);
    spiWrite(0x08);
    spiWrite(0x4E);
    spiWrite(0xF1);
    spiWrite(0x37);
    spiWrite(0x07);
    spiWrite(0x10);
    spiWrite(0x03);
    spiWrite(0x0E);
    spiWrite(0x09);
    spiWrite(0x00);

    writeCommand(0xE1);
    spiWrite(0x00);
    spiWrite(0x0E);
    spiWrite(0x14);
    spiWrite(0x03);
    spiWrite(0x11);
    spiWrite(0x07);
    spiWrite(0x31);
    spiWrite(0xC1);
    spiWrite(0x48);
    spiWrite(0x08);
    spiWrite(0x0F);
    spiWrite(0x0C);
    spiWrite(0x31);
    spiWrite(0x36);
    spiWrite(0x0F);

    writeCommand(0x11);
    delay(120);
    writeCommand(0x29);
    delay(120);
    endWrite();

    _width = 240;
    _height = 320;
}
# 462 "../lib/Adafruit_ILI9341/Adafruit_ILI9341.cpp"
void Adafruit_ILI9341::setRotation(uint8_t m) {
    rotation = m % 4;
    switch (rotation) {
        case 0:
            m = (0x40 | 0x08);
            _width = 240;
            _height = 320;
            break;
        case 1:
            m = (0x20 | 0x08);
            _width = 320;
            _height = 240;
            break;
        case 2:
            m = (0x80 | 0x08);
            _width = 240;
            _height = 320;
            break;
        case 3:
            m = (0x40 | 0x80 | 0x20 | 0x08);
            _width = 320;
            _height = 240;
            break;
    }

    startWrite();
    writeCommand(0x36);
    spiWrite(m);
    endWrite();
}







void Adafruit_ILI9341::invertDisplay(boolean invert) {
    startWrite();
    writeCommand(invert ? 0x21 : 0x20);
    endWrite();
}







void Adafruit_ILI9341::scrollTo(uint16_t y) {
    startWrite();
    writeCommand(0x37);
    if(_sclk < 0){{(*(volatile uint8_t *)((0x2E) + 0x20)) = ((y) >> 8); while(!((*(volatile uint8_t *)((0x2D) + 0x20)) & (1 << (7))));}; {(*(volatile uint8_t *)((0x2E) + 0x20)) = (y); while(!((*(volatile uint8_t *)((0x2D) + 0x20)) & (1 << (7))));};}else{spiWrite((y) >> 8); spiWrite(y);};
    endWrite();
}
# 527 "../lib/Adafruit_ILI9341/Adafruit_ILI9341.cpp"
void Adafruit_ILI9341::setAddrWindow(uint16_t x, uint16_t y, uint16_t w, uint16_t h) {
    uint32_t xa = ((uint32_t)x << 16) | (x+w-1);
    uint32_t ya = ((uint32_t)y << 16) | (y+h-1);
    writeCommand(0x2A);
    if(_sclk < 0){{(*(volatile uint8_t *)((0x2E) + 0x20)) = ((xa) >> 24); while(!((*(volatile uint8_t *)((0x2D) + 0x20)) & (1 << (7))));}; {(*(volatile uint8_t *)((0x2E) + 0x20)) = ((xa) >> 16); while(!((*(volatile uint8_t *)((0x2D) + 0x20)) & (1 << (7))));}; {(*(volatile uint8_t *)((0x2E) + 0x20)) = ((xa) >> 8); while(!((*(volatile uint8_t *)((0x2D) + 0x20)) & (1 << (7))));}; {(*(volatile uint8_t *)((0x2E) + 0x20)) = (xa); while(!((*(volatile uint8_t *)((0x2D) + 0x20)) & (1 << (7))));};}else{spiWrite((xa) >> 24); spiWrite((xa) >> 16); spiWrite((xa) >> 8); spiWrite(xa);};
    writeCommand(0x2B);
    if(_sclk < 0){{(*(volatile uint8_t *)((0x2E) + 0x20)) = ((ya) >> 24); while(!((*(volatile uint8_t *)((0x2D) + 0x20)) & (1 << (7))));}; {(*(volatile uint8_t *)((0x2E) + 0x20)) = ((ya) >> 16); while(!((*(volatile uint8_t *)((0x2D) + 0x20)) & (1 << (7))));}; {(*(volatile uint8_t *)((0x2E) + 0x20)) = ((ya) >> 8); while(!((*(volatile uint8_t *)((0x2D) + 0x20)) & (1 << (7))));}; {(*(volatile uint8_t *)((0x2E) + 0x20)) = (ya); while(!((*(volatile uint8_t *)((0x2D) + 0x20)) & (1 << (7))));};}else{spiWrite((ya) >> 24); spiWrite((ya) >> 16); spiWrite((ya) >> 8); spiWrite(ya);};
    writeCommand(0x2C);
}







void Adafruit_ILI9341::pushColor(uint16_t color) {
    if(_sclk < 0){{(*(volatile uint8_t *)((0x2E) + 0x20)) = ((color) >> 8); while(!((*(volatile uint8_t *)((0x2D) + 0x20)) & (1 << (7))));}; {(*(volatile uint8_t *)((0x2E) + 0x20)) = (color); while(!((*(volatile uint8_t *)((0x2D) + 0x20)) & (1 << (7))));};}else{spiWrite((color) >> 8); spiWrite(color);};
}







void Adafruit_ILI9341::writePixel(uint16_t color){
    if(_sclk < 0){{(*(volatile uint8_t *)((0x2E) + 0x20)) = ((color) >> 8); while(!((*(volatile uint8_t *)((0x2D) + 0x20)) & (1 << (7))));}; {(*(volatile uint8_t *)((0x2E) + 0x20)) = (color); while(!((*(volatile uint8_t *)((0x2D) + 0x20)) & (1 << (7))));};}else{spiWrite((color) >> 8); spiWrite(color);};
}
# 564 "../lib/Adafruit_ILI9341/Adafruit_ILI9341.cpp"
void Adafruit_ILI9341::writePixels(uint16_t * colors, uint32_t len){
    if(_sclk < 0){for(uint32_t i=0; i<(len * 2); i+=2){ {(*(volatile uint8_t *)((0x2E) + 0x20)) = (((uint8_t*)((uint8_t*)colors))[i+1]); while(!((*(volatile uint8_t *)((0x2D) + 0x20)) & (1 << (7))));}; {(*(volatile uint8_t *)((0x2E) + 0x20)) = (((uint8_t*)((uint8_t*)colors))[i]); while(!((*(volatile uint8_t *)((0x2D) + 0x20)) & (1 << (7))));}; };}else{for(uint32_t i=0; i<(len * 2); i+=2){ spiWrite(((uint8_t*)((uint8_t*)colors))[i+1]); spiWrite(((uint8_t*)((uint8_t*)colors))[i]); };};
}
# 575 "../lib/Adafruit_ILI9341/Adafruit_ILI9341.cpp"
void Adafruit_ILI9341::writeColor(uint16_t color, uint32_t len){
# 597 "../lib/Adafruit_ILI9341/Adafruit_ILI9341.cpp"
    uint8_t hi = color >> 8, lo = color;
    if(_sclk < 0){
        for (uint32_t t=len; t; t--){
            {(*(volatile uint8_t *)((0x2E) + 0x20)) = (hi); while(!((*(volatile uint8_t *)((0x2D) + 0x20)) & (1 << (7))));};
            {(*(volatile uint8_t *)((0x2E) + 0x20)) = (lo); while(!((*(volatile uint8_t *)((0x2D) + 0x20)) & (1 << (7))));};
        }
        return;
    }
    for (uint32_t t=len; t; t--){
        spiWrite(hi);
        spiWrite(lo);
    }

}
# 620 "../lib/Adafruit_ILI9341/Adafruit_ILI9341.cpp"
void Adafruit_ILI9341::writePixel(int16_t x, int16_t y, uint16_t color) {
    if((x < 0) ||(x >= _width) || (y < 0) || (y >= _height)) return;
    setAddrWindow(x,y,1,1);
    writePixel(color);
}
# 636 "../lib/Adafruit_ILI9341/Adafruit_ILI9341.cpp"
void Adafruit_ILI9341::writeFillRect(int16_t x, int16_t y, int16_t w, int16_t h, uint16_t color){
    if((x >= _width) || (y >= _height)) return;
    int16_t x2 = x + w - 1, y2 = y + h - 1;
    if((x2 < 0) || (y2 < 0)) return;


    if(x < 0) {
        x = 0;
        w = x2 + 1;
    }
    if(y < 0) {
        y = 0;
        h = y2 + 1;
    }


    if(x2 >= _width) w = _width - x;
    if(y2 >= _height) h = _height - y;

    int32_t len = (int32_t)w * h;
    setAddrWindow(x, y, w, h);
    writeColor(color, len);
}
# 670 "../lib/Adafruit_ILI9341/Adafruit_ILI9341.cpp"
void Adafruit_ILI9341::writeFastVLine(int16_t x, int16_t y, int16_t l, uint16_t color){
    writeFillRect(x, y, 1, l, color);
}
# 684 "../lib/Adafruit_ILI9341/Adafruit_ILI9341.cpp"
void Adafruit_ILI9341::writeFastHLine(int16_t x, int16_t y, int16_t l, uint16_t color){
    writeFillRect(x, y, l, 1, color);
}
# 696 "../lib/Adafruit_ILI9341/Adafruit_ILI9341.cpp"
void Adafruit_ILI9341::drawPixel(int16_t x, int16_t y, uint16_t color){
    startWrite();
    writePixel(x, y, color);
    endWrite();
}
# 711 "../lib/Adafruit_ILI9341/Adafruit_ILI9341.cpp"
void Adafruit_ILI9341::drawFastVLine(int16_t x, int16_t y,
        int16_t l, uint16_t color) {
    startWrite();
    writeFastVLine(x, y, l, color);
    endWrite();
}
# 727 "../lib/Adafruit_ILI9341/Adafruit_ILI9341.cpp"
void Adafruit_ILI9341::drawFastHLine(int16_t x, int16_t y,
        int16_t l, uint16_t color) {
    startWrite();
    writeFastHLine(x, y, l, color);
    endWrite();
}
# 744 "../lib/Adafruit_ILI9341/Adafruit_ILI9341.cpp"
void Adafruit_ILI9341::fillRect(int16_t x, int16_t y, int16_t w, int16_t h,
        uint16_t color) {
    startWrite();
    writeFillRect(x,y,w,h,color);
    endWrite();
}
# 767 "../lib/Adafruit_ILI9341/Adafruit_ILI9341.cpp"
void Adafruit_ILI9341::drawRGBBitmap(int16_t x, int16_t y,
  uint16_t *pcolors, int16_t w, int16_t h) {

    int16_t x2, y2;
    if(( x >= _width ) ||
       ( y >= _height) ||
       ((x2 = (x+w-1)) < 0 ) ||
       ((y2 = (y+h-1)) < 0) ) return;

    int16_t bx1=0, by1=0,
            saveW=w;
    if(x < 0) {
        w += x;
        bx1 = -x;
        x = 0;
    }
    if(y < 0) {
        h += y;
        by1 = -y;
        y = 0;
    }
    if(x2 >= _width ) w = _width - x;
    if(y2 >= _height) h = _height - y;

    pcolors += by1 * saveW + bx1;
    startWrite();
    setAddrWindow(x, y, w, h);
    while(h--) {
      writePixels(pcolors, w);
      pcolors += saveW;
    }
    endWrite();
}
# 811 "../lib/Adafruit_ILI9341/Adafruit_ILI9341.cpp"
uint8_t Adafruit_ILI9341::readcommand8(uint8_t command, uint8_t index) {
    uint32_t freq = _freq;
    if(_freq > 24000000){
        _freq = 24000000;
    }
    startWrite();
    writeCommand(0xD9);
    spiWrite(0x10 + index);
    writeCommand(command);
    uint8_t r = spiRead();
    endWrite();
    _freq = freq;
    return r;
}







void Adafruit_ILI9341::startWrite(void){
    if(_sclk < 0){SPI.beginTransaction(SPISettings(_freq, 1, 0x00));};
    *csport &= ~cspinmask;
}






void Adafruit_ILI9341::endWrite(void){
    *csport |= cspinmask;
    if(_sclk < 0){SPI.endTransaction();};
}
# 854 "../lib/Adafruit_ILI9341/Adafruit_ILI9341.cpp"
void Adafruit_ILI9341::writeCommand(uint8_t cmd){
    *dcport &= ~dcpinmask;
    spiWrite(cmd);
    *dcport |= dcpinmask;
}
# 867 "../lib/Adafruit_ILI9341/Adafruit_ILI9341.cpp"
uint8_t Adafruit_ILI9341::spiRead() {
    if(_sclk < 0){
        return _avr_spi_read();
    }
    if(_miso < 0){
        return 0;
    }
    uint8_t r = 0;
    for (uint8_t i=0; i<8; i++) {
        *clkport &= ~clkpinmask;
        *clkport |= clkpinmask;
        r <<= 1;
        if (((*misoport & misopinmask) != 0)){
            r |= 0x1;
        }
    }
    return r;
}







void Adafruit_ILI9341::spiWrite(uint8_t b) {
    if(_sclk < 0){
        {(*(volatile uint8_t *)((0x2E) + 0x20)) = (b); while(!((*(volatile uint8_t *)((0x2D) + 0x20)) & (1 << (7))));};
        return;
    }
    for(uint8_t bit = 0x80; bit; bit >>= 1){
        if((b) & bit){
            *mosiport |= mosipinmask;
        } else {
            *mosiport &= ~mosipinmask;
        }
        *clkport &= ~clkpinmask;
        *clkport |= clkpinmask;
    }
}
